version: "3.9"

services:
  # postgres:
  #   container_name: postgres
  #   build: ./postgres
  #   restart: always
  #   expose:
  #     - 5432
  #   networks:
  #     - ft_transcendence
  #   volumes:
  #     - ./postgres/DB_DATA:/var/lib/postgres
  #   env_file: .env

  nginx:
    container_name: nginx
    build: ./nginx
    depends_on:
      - auth
      # - frontend
      # - postgres
    restart: always
    networks:
      - ft_transcendence
    volumes:
      - ./nginx/frontend/:/usr/share/nginx/html
    ports:
      - 443:443
    env_file: .env

  auth:
    container_name: auth
    build: ./backend/auth
    # depends_on:
      # - postgres
    restart: always
    expose:
      - 8080
    networks:
      - ft_transcendence
    volumes:
      - ./backend/auth/app/:/var/www/app
      - ./backend/auth/auth/:/var/www/auth
      - ./backend/auth/config/:/var/www/config
      - ./backend/auth/manage.py:/var/www/manage.py
    env_file: .env

  # frontend:
  #   container_name: frontend
  #   build: ./frontend
  #   depends_on:
  #     - backend
  #   restart: always
  #   expose:
  #     - 5050
  #   networks:
  #     - ft_transcendence
  #   volumes:
  #     - ./frontend/frontend/:/var/www/frontend
  #   env_file: .env

  # Remove everything related to pgadmin before finishing the project
  # pgadmin:
  #   container_name: pgadmin
  #   build: ./pgadmin
  #   depends_on:
  #     - postgres
  #   restart: always
  #   networks:
  #     - ft_transcendence
  #   ports:
  #     - 7070:80
  #   env_file: .env

networks:
  ft_transcendence:
    driver: bridge
